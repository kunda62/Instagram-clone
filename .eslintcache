[{"D:\\React\\instagram-clone\\src\\reportWebVitals.js":"1","D:\\React\\instagram-clone\\src\\App.js":"2","D:\\React\\instagram-clone\\src\\components\\Post.js":"3","D:\\React\\instagram-clone\\src\\index.js":"4","D:\\React\\instagram-clone\\src\\firebase.js":"5","D:\\React\\instagram-clone\\src\\components\\ImageUpload.js":"6","D:\\React\\instagram-clone\\src\\serviceWorker.js":"7","D:\\React\\instagram-clone\\src\\components\\MenuPopupState.js":"8","D:\\React\\instagram-clone\\src\\components\\PostThumb.js":"9"},{"size":362,"mtime":1607358554545,"results":"10","hashOfConfig":"11"},{"size":12383,"mtime":1608120225531,"results":"12","hashOfConfig":"11"},{"size":8477,"mtime":1608116939556,"results":"13","hashOfConfig":"11"},{"size":579,"mtime":1608056064754,"results":"14","hashOfConfig":"11"},{"size":600,"mtime":1608027791728,"results":"15","hashOfConfig":"11"},{"size":3439,"mtime":1608117286139,"results":"16","hashOfConfig":"11"},{"size":5458,"mtime":1608056027721,"results":"17","hashOfConfig":"11"},{"size":2030,"mtime":1608057272117,"results":"18","hashOfConfig":"11"},{"size":1251,"mtime":1608119187472,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1276ndl",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React\\instagram-clone\\src\\reportWebVitals.js",[],["40","41"],"D:\\React\\instagram-clone\\src\\App.js",["42","43"],"D:\\React\\instagram-clone\\src\\components\\Post.js",["44","45","46","47","48","49","50","51"],"import { Avatar } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../css/Post.css'\r\nimport { db, auth } from '../firebase';\r\nimport firebase from 'firebase';\r\nimport Textarea from 'react-expanding-textarea';\r\nimport Linkify from 'react-linkify';\r\nimport MenuPopupState from '../components/MenuPopupState'\r\n\r\n\r\nfunction Post({ lang, postId, username, user, caption, imageUrl, imagename, viewwhichuser }) {\r\n    const [comments, setComments] = useState([]);\r\n    const [comment, setComment] = useState([]);\r\n\r\n    const componentDecorator = (href, text, key) => (\r\n        <a href={href} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {text}\r\n        </a>\r\n    );\r\n    useEffect(() => {\r\n        let unsubscribe;\r\n        if (postId) {\r\n            unsubscribe = db\r\n                .collection(\"posts\")\r\n                .doc(postId)\r\n                .collection(\"comments\")\r\n                .orderBy('timestamp', 'asc')\r\n                .onSnapshot((snapshot) => {\r\n\r\n                    setComments(snapshot.docs.map((doc) => doc.data()));\r\n                })\r\n        }\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, [postId]);\r\n\r\n    const postComment = (event) => {\r\n        event.preventDefault();\r\n        db.collection(\"posts\").doc(postId).collection(\"comments\").add({\r\n            text: comment,\r\n            username: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n        });\r\n        setComment('');\r\n    }\r\n\r\n    function deletePost(postId) {\r\n        // event.preventDefault();\r\n\r\n        db.collection(\"posts\").doc(postId).delete().then(function () {\r\n            console.log(\"Document successfully deleted!\");\r\n        }).catch(function (error) {\r\n            console.log(\"Error removing document: \", error);\r\n        });\r\n        // Get a reference to the storage service, which is used to create references in your storage bucket\r\n        var storage = firebase.storage();\r\n\r\n        // Create a storage reference from our storage service\r\n        var storageRef = storage.ref();\r\n\r\n        // Create a reference to the file to delete\r\n        var desertRef = storageRef.child('images/' + imagename);\r\n\r\n        // Delete the file\r\n        desertRef.delete().then(function () {\r\n            // File deleted successfully\r\n\r\n        }).catch(function (error) {\r\n            // Uh-oh, an error occurred!\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    function deleteComment(commentToDel) {\r\n\r\n        // Spent a whole fucking night and most of an afternoon trying to figure this one out!!!!\r\n\r\n        db.collection(\"posts\")\r\n            .doc(postId)\r\n            .collection(\"comments\")\r\n            .where(\"timestamp\", \"==\", commentToDel)\r\n            .get()\r\n            .then(function (querySnapshot) {\r\n                querySnapshot.forEach(function (doc) {\r\n\r\n                    doc.ref.delete();\r\n\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    function backtotop() {\r\n        document.body.scrollTop = 0; // For Safari\r\n        document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n    }\r\n\r\n    // Function to view others' posts\r\n    function viewtheirstuff(userselected) {\r\n        viewwhichuser(userselected);\r\n        backtotop();\r\n    }\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post__header\">\r\n                <Avatar\r\n                    className=\"post__avatar\"\r\n                    alt={username}\r\n                    src=\"/static/images/avatar/1.jpg\"\r\n                    onClick={viewtheirstuff.bind(this, username)}\r\n                />\r\n                <div className=\"post__username\" onClick={viewtheirstuff.bind(this, username)}>\r\n                    <h3>{username} </h3>\r\n                </div>\r\n                {\r\n                    (user && username === auth.currentUser.displayName || user && auth.currentUser.email === \"admin@gmail.com\")\r\n                    &&\r\n                    <div className=\"delete__Post\">\r\n                        {/* This is where the 3 dots menu appear to delete POSTS */}\r\n                        <MenuPopupState\r\n                            lang={lang}\r\n                            datatopass={postId}\r\n                            functiontopass={deletePost}\r\n                            labeltopass={lang ? \"Effacer cette publication\" : \"Delete this post\"}\r\n                        />\r\n                    </div>\r\n\r\n                }\r\n\r\n            </div>\r\n\r\n            <div className=\"post__imgcontainer\">\r\n\r\n                {\r\n                    // Check if the image is a video instead of an image, and if so, use the VIDEO tag instead\r\n                    (imageUrl.includes(\".mp4\")) || (imageUrl.includes(\".MP4\")) || (imageUrl.includes(\".mov\")) || (imageUrl.includes(\".MOV\"))\r\n                        ?\r\n                        (\r\n                            <video width=\"100%\" max-width=\"500\" controls=\"true\" autoplay=\"true\" loop=\"true\" muted=\"true\" playsinline=\"true\">\r\n                                <source src={imageUrl} type='video/mp4'></source>\r\n                        Your browser does not support the video tag.\r\n                            </video>\r\n                        )\r\n                        :\r\n                        (\r\n                            // If it is NOT a video, load it as an image:\r\n                            <img className=\"post__image\" src={imageUrl} alt=\"\" />\r\n                        )\r\n                }\r\n\r\n            </div>\r\n\r\n\r\n\r\n            <h4 className=\"post__text breakfix\">\r\n                {\r\n                    caption && // Only if the caption field is NOT empty, display it along with the user name\r\n                    <Linkify componentDecorator={componentDecorator}>\r\n                        <strong onClick={viewtheirstuff.bind(this, username)}>{username}: </strong>{caption}\r\n                    </Linkify>\r\n                }\r\n            </h4>\r\n\r\n            <div className=\"post__comments\">\r\n                {comments.map((comment) => (\r\n\r\n\r\n                    <div className=\"comment_container\">\r\n\r\n                        <p className=\"post__comment breakfix\">\r\n                            <Linkify componentDecorator={componentDecorator}>\r\n                                <strong onClick={viewtheirstuff.bind(this, comment.username)}>\r\n                                    {comment.username}:\r\n                                </strong> {comment.text}\r\n                            </Linkify>\r\n\r\n                        </p>\r\n                        <div className=\"delete__CommentButton\" >\r\n                            {\r\n                                (user && comment.username === auth.currentUser.displayName || user && auth.currentUser.email === \"admin@gmail.com\")\r\n                                &&\r\n                                <div className=\"comment__morevert\">\r\n\r\n                                    {/* This is where the 3 dots menu appear to delete comments */}\r\n                                    <MenuPopupState\r\n                                        lang={lang}\r\n                                        datatopass={comment.timestamp}\r\n                                        functiontopass={deleteComment}\r\n                                        labeltopass={lang ? \"Effacez ce commentaire\" : \"Delete this comment\"}\r\n                                    />\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                ))}\r\n            </div>\r\n\r\n\r\n            {user && ( // Only display this comment form input if the user has logged in\r\n                <form className=\"post__commentBox\">\r\n                    <Textarea\r\n                        className=\"post__input\"\r\n                        type=\"text\"\r\n                        placeholder={lang ? \"Ajoutez un commentaire\" : \"Add a comment\"}\r\n                        value={comment}\r\n                        onChange={(e) => setComment(e.target.value)}\r\n                    />\r\n\r\n                    <button\r\n                        className=\"post__button\"\r\n                        disable={!comment}\r\n                        type=\"submit\"\r\n                        onClick={postComment}\r\n                    >\r\n                        {lang ? \"Publier\" : \"Post\"}\r\n                    </button>\r\n                </form>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","D:\\React\\instagram-clone\\src\\index.js",[],"D:\\React\\instagram-clone\\src\\firebase.js",[],"D:\\React\\instagram-clone\\src\\components\\ImageUpload.js",[],"D:\\React\\instagram-clone\\src\\serviceWorker.js",[],"D:\\React\\instagram-clone\\src\\components\\MenuPopupState.js",[],"D:\\React\\instagram-clone\\src\\components\\PostThumb.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":12,"column":8,"nodeType":"58","messageId":"59","endLine":12,"endColumn":22},{"ruleId":"56","severity":1,"message":"60","line":73,"column":16,"nodeType":"58","messageId":"59","endLine":73,"endColumn":23},{"ruleId":"61","severity":1,"message":"62","line":120,"column":27,"nodeType":"63","messageId":"64","endLine":120,"endColumn":29},{"ruleId":"61","severity":1,"message":"62","line":120,"column":72,"nodeType":"63","messageId":"64","endLine":120,"endColumn":74},{"ruleId":"61","severity":1,"message":"65","line":120,"column":72,"nodeType":"63","messageId":"64","endLine":120,"endColumn":74},{"ruleId":"61","severity":1,"message":"65","line":120,"column":80,"nodeType":"63","messageId":"64","endLine":120,"endColumn":82},{"ruleId":"61","severity":1,"message":"62","line":184,"column":39,"nodeType":"63","messageId":"64","endLine":184,"endColumn":41},{"ruleId":"61","severity":1,"message":"62","line":184,"column":92,"nodeType":"63","messageId":"64","endLine":184,"endColumn":94},{"ruleId":"61","severity":1,"message":"65","line":184,"column":92,"nodeType":"63","messageId":"64","endLine":184,"endColumn":94},{"ruleId":"61","severity":1,"message":"65","line":184,"column":100,"nodeType":"63","messageId":"64","endLine":184,"endColumn":102},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'MenuPopupState' is defined but never used.","Identifier","unusedVar","'setLang' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","no-global-assign","no-unsafe-negation"]